//* Shader Type:
//* The @fragment attribute specifies that this function is a fragment shader. Fragment shaders operate on individual fragments (pixels) generated by the rasterization process and are responsible for determining their final color.
//* Function Signature:
//* fn fs_main(@location(0) color: vec4f) -> @location(0) vec4f:
//* fs_main: The name of the function, which serves as the entry point for the fragment shader.
//* @location(0) color: vec4f: This is an input parameter. The @location(0) qualifier indicates that the input comes from the vertex shader's output at location 0. The type vec4f represents a 4-component floating-point vector, typically used for RGBA colors.
//* -> @location(0) vec4f: This specifies the return value of the function. The output is also a 4-component vector (vec4f) and will be written to location 0 in the fragment output.
//* Function Body:
//* return color;: The function simply returns the input color without modification. This means the fragment shader directly outputs whatever color it receives from the vertex shader.

@fragment
fn fs_main(@location(0) color: vec4f) -> @location(0) vec4f {
  return color;
}
